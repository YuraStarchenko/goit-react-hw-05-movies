{"version":3,"file":"static/js/379.cfe378e8.chunk.js","mappings":"0PAEaA,EAASC,EAAAA,GAAAA,OAAH,yOAaNC,EAAOD,EAAAA,GAAAA,KAAH,+SAYJE,EAASF,EAAAA,GAAAA,OAAH,6cAsBNG,EAAQH,EAAAA,GAAAA,MAAH,gR,kBC3CLI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAuBA,OACE,SAACT,EAAD,WACE,UAACE,EAAD,CAAMI,SAlBW,SAAAI,GACnBA,EAAEC,iBACwB,KAAtBH,EAAWI,QAUfN,EAASE,GACTC,EAAc,MAVfI,EAAAA,EAAAA,IAAM,6CAAoC,CACrCC,MAAO,CACLC,aAAc,OACdC,WAAY,uBACZC,MAAO,SAOd,EAIG,WACE,SAACd,EAAD,CAAQe,KAAK,SAAb,UACE,SAAC,MAAD,OAGF,SAACd,EAAD,CACEc,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOb,EACPc,YAAY,2BACZC,SAlCkB,SAAAb,GACxBD,EAAcC,EAAEc,cAAcH,MAAMI,cACrC,KAkCK,SAAC,KAAD,CAASC,SAAS,aAAaC,cAAc,QAIpD,E,4CC/CYC,EAAM3B,EAAAA,GAAAA,IAAH,sUAeH4B,EAAM5B,EAAAA,GAAAA,IAAH,iGAKH6B,EAAO7B,EAAAA,GAAAA,EAAH,oNCqCjB,EAnDe,WAAO,IAAD,EACnB,GAA0CM,EAAAA,EAAAA,UAAS,IAAnD,eAAOwB,EAAP,KAAsBC,EAAtB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGJ,EAAYK,IAAI,gBAAnB,QAA+B,GAkB1C,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EACF,KACEG,EAAAA,EAAAA,IAAgBH,GAAOI,MAAK,SAAAC,GAC1BX,GAAiB,OAAIW,EAAEC,SACxB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CAEJ,GAAE,CAACP,KAGF,UAAC,IAAD,YACE,SAACjC,EAAD,CAAWC,SAlBI,SAAA0C,GACjBb,EAA8B,KAAfa,EAAoB,CAAEV,MAAOU,GAAe,CAAC,EAC7D,IAiB6B,IAAzBjB,EAAckB,QAA0B,KAAVX,IAC7B,SAACT,EAAD,CAAKqB,IAAKC,EAAMC,IAAI,SAGrBrB,EAAckB,OAAS,IACtB,SAACrB,EAAD,WACE,UAACE,EAAD,8BACiB,wBAAKQ,IADtB,UAKJ,wBACGP,EAAcsB,KAAI,SAAAT,GACjB,OACE,yBACE,SAAC,KAAD,CAAMU,GAAE,UAAKV,EAAQW,IAAMC,MAAO,CAAEC,KAAMrB,GAA1C,SACGQ,EAAQc,SAFJd,EAAQW,GAMpB,QAIR,C","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  border-radius: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 48px;\n  padding: 12px, 24px, 12px, 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 500px;\n  background-color: #fff;\n  border-radius: 25px;\n  overflow: hidden;\n  color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  border: 0;\n  margin-left: 2px;\n  width: 50px;\n  height: 45px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 2;\n  border-radius: 50%;\n  background-color: #355f99;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  height: 48px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    padding-left: 5px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Header, Form, Button, Input } from './SearchBar.styled.js';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const inputHandleChange = e => {\n    setInputValue(e.currentTarget.value.toLowerCase());\n  };\n\n  // Не дает засобмитить пустой инпут и пробелы\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n\t\t\ttoast('Enter the name of the Movies 🎥 ', {\n        style: {\n          borderRadius: '25px',\n          background: 'rgb(53 95 153 / 80%)',\n          color: '#fff',\n        },\n      });\n      return;\n    }\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <Header>\n      <Form onSubmit={handleSubmit}>\n        <Button type=\"submit\">\n          <BsSearch />\n        </Button>\n\n        <Input\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          value={inputValue}\n          placeholder=\"Search Cinema and Series\"\n          onChange={inputHandleChange}\n        />\n        <Toaster position=\"top-center\" reverseOrder={false} />\n      </Form>\n    </Header>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  border-radius: 30px;\n  justify-content: center;\n  margin-top: 20px;\n  width: 200px;\n  margin-bottom: 20px;\n  padding: 10px;\n  overflow: hidden;\n  background-color: rgb(53, 95, 153);\n  border: solid 1px #dbdbdb;\n  background-color: rgb(53, 95, 153);\n  text-align: center;\n`;\n\nexport const Img = styled.img`\n  padding-top: 100px;\n  background-image: url('/src/img/3828537.jpg');\n`;\n\nexport const Text = styled.p`\n  border: solid 1px #dbdbdb;\n  padding: 10px;\n  width: 200px;\n  overflow: hidden;\n  border-radius: 30px;\n  color: #fff;\n  background-color: rgb(53, 95, 153);\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Container } from 'components/Container.styled';\nimport { getSearchMovies } from 'service/movieApi';\nimport logo from '../../img/Logo.jpg';\nimport { Text, Img, Div } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const location = useLocation();\n  const query = searchQuery.get('query') ?? '';\n\n  const FormSubmit = searchFrom => {\n    setSearchQuery(searchFrom !== '' ? { query: searchFrom } : {});\n  };\n\n  useEffect(() => {\n    if (query) {\n      try {\n        getSearchMovies(query).then(r => {\n          setSearchResults([...r.results]);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [query]);\n\n  return (\n    <Container>\n      <SearchBar onSubmit={FormSubmit} />\n      {searchResults.length === 0 && query !== '' && (\n        <Img src={logo} alt=\"Logo\" />\n      )}\n\n      {searchResults.length > 0 && (\n        <Div>\n          <Text>\n            Search results <em>{query}</em>:\n          </Text>\n        </Div>\n      )}\n      <ul>\n        {searchResults.map(results => {\n          return (\n            <li key={results.id}>\n              <Link to={`${results.id}`} state={{ from: location }}>\n                {results.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["Header","styled","Form","Button","Input","SearchBar","onSubmit","useState","inputValue","setInputValue","e","preventDefault","trim","toast","style","borderRadius","background","color","type","autocomplete","autoFocus","value","placeholder","onChange","currentTarget","toLowerCase","position","reverseOrder","Div","Img","Text","searchResults","setSearchResults","useSearchParams","searchQuery","setSearchQuery","location","useLocation","query","get","useEffect","getSearchMovies","then","r","results","error","console","log","searchFrom","length","src","logo","alt","map","to","id","state","from","title"],"sourceRoot":""}